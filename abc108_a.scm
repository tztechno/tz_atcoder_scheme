abc108_a.scm
##############################################
##############################################
##############################################
(let ((a (read)))(print (* (div a 2) (div (+ a 1) 2))))
##############################################
(define (main arg)
  (let ((k (read)))
    (print (div (* k k) 4))) 0)
##############################################
(display (let ((K (read))) (if (= (modulo K 2) 0) (/ (* K K) 4) (/ (- (* K K) 1) 4) )))
##############################################
(define (solve k)
  (receive (q r) (quotient&remainder k 2)
           (+ (* q q) (* r q))))

(define (main args)
  (let1 k (read)
    (print (solve k)))
  0)

##############################################
(let ((n (read)) )
  (print (* (quotient n 2) (quotient (+ n 1) 2)) )
  )
##############################################
